{"version":3,"sources":["Footer.js","HomePage.js","CheckBox.js","FormPage.js","firebase.js","ResPage.js","ResCard.js","SavedPage.js","App.js","serviceWorker.js","index.js","img/man-thinking.jpeg"],"names":["Footer","className","id","href","Component","HomePage","aria-labelledby","src","image","alt","role","aria-label","to","process","CheckBox","props","htmlFor","onChange","handleCheckChieldElement","type","checked","isChecked","value","name","FormPage","event","options","state","forEach","option","target","setState","result","filter","res","map","ele","onUpdate","this","placeholder","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","ResPage","potential","curr","location","handleClick","bind","handleSave","config","formInfo","headers","params","distance","price","categories","open_now","axios","get","checkParam","then","data","businesses","randomRes","Math","floor","random","length","display_address","join","catch","error","console","log","response","savedRef","database","ref","child","currentUser","uid","rating","image_url","url","set","isLoggedIn","user","onClick","ResCard","handleDelete","resName","userID","remove","SavedPage","restaurants","resData","Object","keys","push","App","handleChange","login","logout","savedRes","stateChanges","signInWithPopup","on","snapshot","saved","val","signOut","Navbar","Brand","Toggle","aria-controls","Collapse","Nav","path","updateSaved","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.9a9fb6e8.chunk.js","sourcesContent":["import React, { Component } from 'react'; //import React Component\n\nexport class Footer extends Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer text-center py-3\">\n                <p id=\"contact\">\n                    Contact Information: <a href=\"mailto:kayla900@uw.edu\">kayla900@uw.edu</a> or <a\n                    href=\"mailto:divij@uw.edu\">divij@uw.edu</a>\n                </p>\n\n                <p>\n                    @2020 Copyright: Kayla C. and Divij S.\n                </p>\n                </div>\n          </footer>\n         );\n    }\n}","import React, { Component } from 'react'; //import React Component\nimport image from './img/man-thinking.jpeg';\nimport { Footer } from './Footer';\nimport { Link } from \"react-router-dom\";\n\nexport class HomePage extends Component {\n  render() {\n    return (\n      <>\n        <hr></hr>\n\n        <header>\n          <h1>About Restaurant Picker</h1>\n        </header>\n\n        <main>\n          <div className=\"project-desc\">\n            <div>\n              <div id=\"mission\">\n                <p>Our mission is to help people save precious time spent on deciding</p>\n                <p>where to eat. With our application, users can generate a random</p>\n                <p>open restaurant that matches their preferences.</p>\n              </div>\n\n              <p id=\"features-label\"><strong>Features:</strong></p>\n              <ul aria-labelledby=\"features-label\">\n                <li>Find nearby restaurants based on your location</li>\n                <li>Filter restaurants by food categories, price, and distance</li>\n                <li>View relevant information about the selected restaurant</li>\n              </ul>\n            </div>\n\n            <img src={image} alt=\"Man sitting down and staring at his laptop\" />\n          </div>\n\n          <div className=\"text-center\">\n            <Link role=\"button\" aria-label=\"Go to form\" className=\"btn btn-dark start-btn\" to={process.env.PUBLIC_URL + '/form'}>Lets get\n            started!</Link>\n          </div>\n        </main>\n\n        <Footer></Footer>\n      </>\n    );\n  }\n}","import React from 'react'\n\nexport const CheckBox = props => {\n    return (\n      <div className=\"form-check\">\n        <label className=\"form-check-label\" htmlFor={props.id}>\n        <input className=\"form-check-input\" onChange={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> \n        {props.name}\n        </label>\n      </div>\n    )\n}\n\nexport default CheckBox","import React, { Component } from 'react'; //import React Component\nimport { Footer } from './Footer';\nimport CheckBox from './CheckBox';\nimport { Link } from \"react-router-dom\";\n\nexport class FormPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: [\n                { id: 1, value: \"asianfusion\", name: \"Asian\", isChecked: false },\n                { id: 2, value: \"bbq\", name: \"BBQ\", isChecked: false },\n                { id: 3, value: \"chinese\", name: \"Chinese\", isChecked: false },\n                { id: 4, value: \"hotdogs\", name: \"Fastfood\", isChecked: false },\n                { id: 5, value: \"hawaiian\", name: \"Hawaiian\", isChecked: false },\n                { id: 6, value: \"indpak\", name: \"Indian\", isChecked: false },\n                { id: 7, value: \"italian\", name: \"Italian\", isChecked: false },\n                { id: 8, value: \"japanese\", name: \"Japanese\", isChecked: false },\n                { id: 9, value: \"korean\", name: \"Korean\", isChecked: false },\n                { id: 10, value: \"mexican\", name: \"Mexican\", isChecked: false },\n                { id: 11, value: \"pizza\", name: \"Pizza\", isChecked: false },\n                { id: 12, value: \"sushi\", name: \"Sushi\", isChecked: false },\n                { id: 13, value: \"thai\", name: \"Thai\", isChecked: false },\n                { id: 14, value: \"vegan\", name: \"Vegan\", isChecked: false },\n                { id: 15, value: \"vegetarian\", name: \"Vegetarian\", isChecked: false }\n            ],\n        }\n    }\n\n    handleCheckChieldElement = (event) => {\n        let options = this.state.options\n        options.forEach(option => {\n            if (option.value === event.target.value)\n                option.isChecked = event.target.checked\n        })\n\n        this.setState({ options: options }, () => {\n            let result = options.filter(res => res.isChecked).map(ele => ele.value);\n            this.props.onUpdate('categories', result);\n        });\n    }\n\n    render() {\n        let onUpdate = this.props.onUpdate;\n\n        return (\n            <>\n                <hr></hr>\n\n                <header>\n                    <h1>Find a restaurant</h1>\n                </header>\n\n                <main>\n                    <form aria-label=\"Submit restaurant preferences\">\n                        <div className=\"form-content\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"location\">Location:</label>\n                                <input type=\"text\" name=\"location\" className=\"form-control\" id=\"location\"\n                                    placeholder=\"Enter address, city, or zip code\" onChange={(event) => onUpdate(event.target.name, event.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"distance\">Price:</label>\n                                <select className=\"form-control\" id=\"price\" name=\"price\" onChange={(event) => onUpdate(event.target.name, event.target.value)}>\n                                    <option value=\"1\">$</option>\n                                    <option value=\"2\">$$</option>\n                                    <option value=\"3\">$$$</option>\n                                    <option value=\"4\">$$$$</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"distance\">Max distance (select one):</label>\n                                <select className=\"form-control\" id=\"distance\" name=\"distance\" onChange={(event) => onUpdate(event.target.name, event.target.value)}>\n                                    <option value=\"1609\">&lt; 1 mile</option>\n                                    <option value=\"8047\">&lt; 5 miles</option>\n                                    <option value=\"16093\">&lt; 10 miles</option>\n                                    <option value=\"24140\">&lt; 15 miles</option>\n                                    <option value=\"32187\">&lt; 20 miles</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <p id=\"checkbox-label\">What are you in the mood for?</p>\n                                {\n                                    this.state.options.map((option) => {\n                                        return (<CheckBox key={option.id} handleCheckChieldElement={this.handleCheckChieldElement}  {...option} />)\n                                    })\n                                }\n                            </div>\n\n\n                            <Link role=\"button\" aria-label=\"Go to restaurant\" className=\"btn btn-dark start-btn\" to={process.env.PUBLIC_URL + '/res'}>Go!</Link>\n                        </div>\n                    </form>\n                </main>\n\n                <Footer></Footer>\n            </>\n        );\n    }\n}","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyCylhICJDdE85iwyMtI9PdG5yaMPW29MXk\",\n  authDomain: \"restaurant-finder-f6e4d.firebaseapp.com\",\n  databaseURL: \"https://restaurant-finder-f6e4d.firebaseio.com\",\n  projectId: \"restaurant-finder-f6e4d\",\n  storageBucket: \"restaurant-finder-f6e4d.appspot.com\",\n  messagingSenderId: \"1098062858225\",\n  appId: \"1:1098062858225:web:1ff714f619f0b44ae2e650\",\n  measurementId: \"G-1ZHWES7RX1\"\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;","import React, { Component } from 'react'; //import React Component\nimport axios from 'axios';\nimport { Footer } from './Footer';\nimport { Link } from \"react-router-dom\";\nimport firebase, { auth, provider } from './firebase.js';\n\nexport class ResPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            potential: [],\n            curr: '',\n            location: ''\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    checkParam() {\n        let config = '';\n        if (this.props.formInfo) {\n            config = {\n                headers: { 'Authorization': 'Bearer t10OHYRfo3GYd6y-YdlHTkGWv8yX9VQegs5ucOD8KrVnfED2v6wceVS-WRRP8B3nbA5_wXQfD2A4OvG1B2lmzFB3MCkbP3keFNOcvZuD8hjbvsWF0SRI8IoUQYNhXnYx'},\n                params: {\n                    location: this.props.formInfo.location,\n                    distance: this.props.formInfo.distance,\n                    price: this.props.formInfo.price,\n                    categories: this.props.formInfo.categories,\n                    open_now: true\n                }\n            };\n        }\n\n        return (config);\n    }\n\n    componentDidMount() {\n        axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?', this.checkParam())\n            .then(res => {\n                this.setState({ potential: res.data.businesses });\n                let randomRes = (this.state.potential)[Math.floor(Math.random() * (this.state.potential).length)];\n                this.setState({ curr: randomRes });\n                let location = randomRes.location.display_address.join(' ');\n                this.setState({ location: location })\n            })\n            .catch(error => {\n                console.log(error.response)\n            });\n    }\n\n    handleClick() {\n        let randomRes = (this.state.potential)[Math.floor(Math.random() * (this.state.potential).length)];\n        this.setState({ curr: randomRes });\n        let location = randomRes.location.display_address.join(' ');\n        this.setState({ location: location })\n    }\n\n    handleSave() {\n        let curr = this.state.curr;\n\n        let savedRef = firebase.database().ref('saved').child(firebase.auth().currentUser.uid);\n        let res = {\n            location: this.state.location,\n            rating: curr.rating,\n            price: curr.price,\n            image: curr.image_url,\n            url: curr.url\n        }\n        savedRef.child(curr.name).set(res);\n        // itemsRef.push(item);\n        // let saved = [curr.name, this.state.location, curr.rating, curr.price, curr.image_url, curr.url];\n        // this.props.onUpdate(saved);\n    }\n\n    render() {\n        let curr = this.state.curr;\n        let isLoggedIn = this.props.user;\n\n        return (\n            <>\n                <header>\n                    <h1>Find a Restaurant</h1>\n                </header>\n                <main>\n                    <div className=\"restaurant-card\">\n                        <img id=\"image\" src={curr.image_url} alt=\"Restaurant of interest\" />\n\n                        <div className=\"restaurant-info\">\n                            <p>\n                                <strong>Restaurant Name: </strong>\n                                {curr.name}\n                            </p>\n\n                            <p>\n                                <strong>Location: </strong>\n                                {this.state.location}\n                            </p>\n\n                            <p>\n                                <strong>Rating: </strong>\n                                {curr.rating}\n                            </p>\n\n                            <p>\n                                <strong>Price: </strong>\n                                {curr.price}\n                            </p>\n\n                            <a role=\"button\" aria-label=\"Learn more\" className=\"btn btn-dark\" href={curr.url} target=\"_blank\">Learn more</a>\n                            { isLoggedIn \n                                ? <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleSave}>Save</button>\n                                : <p>Please sign in to save</p>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"choice-buttons\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClick}>Next restaurant</button>\n                        <Link role=\"button\" aria-label=\"Go to form\" className=\"btn btn-secondary start-btn\" to={process.env.PUBLIC_URL + '/form'}>Go back</Link>\n                    </div>\n                </main>\n                <Footer></Footer>\n            </>\n        )\n    }\n}","import React, { Component } from 'react'; //import React Component\nimport firebase, { auth, provider } from './firebase.js';\n\nexport class ResCard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(resName) {\n        let userID = firebase.auth().currentUser.uid;\n        firebase.database().ref('saved/' + userID + '/' + resName).remove();\n        // console.log(resName);\n    }\n\n    render() {\n        return(\n            <>\n                <div className=\"saved-res\" id={this.props.name}>\n                    <img id=\"image\" src={this.props.image} alt=\"Restaurant of interest\" />\n\n                    <div className=\"restaurant-info\">\n                        <p>\n                            <strong>Restaurant Name: </strong>\n                            <a href={this.props.url}>{this.props.name}</a>\n                        </p>\n\n                        <p>\n                            <strong>Location: </strong>\n                            {this.props.location}\n                        </p>\n\n                        <p>\n                            <strong>Rating: </strong>\n                            {this.props.rating}\n                        </p>\n\n                        <p>\n                            <strong>Price: </strong>\n                            {this.props.price}\n                        </p>\n                    </div>\n\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.handleDelete(this.props.name)}>Delete</button>\n                </div>\n\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react'; //import React Component\nimport { Footer } from './Footer';\nimport { ResCard } from './ResCard';\n\nexport class SavedPage extends Component {\n    render() {\n        let restaurants = [];\n        let isLoggedIn = this.props.user;\n        console.log(this.props.res);\n\n        if(this.props.res) {\n            let resData = this.props.res;\n\n            Object.keys(resData).map(key => {\n                restaurants.push(\n                    <ResCard key={key} name={key} location={resData[key].location} rating={resData[key].rating} price={resData[key].price} image={resData[key].image} url={resData[key].url}></ResCard>\n                )\n            })\n            // for (let i = 0; i < resData.length; i++) {\n            //     // restaurants.push(\n            //     //     <ResCard name={resData[i][0]} location={resData[i][1]} rating={resData[i][2]} price={resData[i][3]} image={resData[i][4]} url={resData[i][5]}></ResCard>\n            //     // )\n            // }\n        }\n\n        return (\n            <>\n                <hr></hr>\n                <header>\n                    <h1>Saved Restaurants</h1>\n                </header>\n                <main>\n                {isLoggedIn\n                    ? <div id=\"res-container\">{restaurants}</div>\n                    : <p>Please sign in to see saved restaurants.</p>\n                }\n                </main>\n                <Footer></Footer>\n            </>\n        );\n    }\n}\n\n","import React, { Component } from 'react'; //import React Component\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\nimport { HomePage } from './HomePage';\nimport { FormPage } from './FormPage';\nimport { ResPage } from './ResPage';\nimport { SavedPage } from './SavedPage';\nimport firebase, { auth, provider } from './firebase.js';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.updateSaved = this.updateSaved.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n\n    this.state = {\n      location: '',\n      distance: '1609',\n      price: '1',\n      categories: '',\n      savedRes: [],\n      user: null\n    };\n\n    this.savedRef = firebase.database().ref('saved');\n    // if(this.state.user) {\n    //   this.userRef = .child(firebase.auth().currentUser.uid);\n    //   this.savedRef.on(\"value\", (snapshot) => {\n    //       console.log(\"something changed on firebase, so I will reset state\")\n    //       this.setState({ saved: snapshot.val() })\n    //   })\n    // }\n  }\n\n  handleChange(key, value) {\n    let stateChanges = {\n      [key]: value\n    };\n\n    this.setState(stateChanges);\n  }\n\n  // updateSaved(res) {\n  //   this.setState(prevState => ({\n  //     savedRes: [...prevState.savedRes, res]\n  //   }));\n  // }\n\n  login() {\n    auth.signInWithPopup(provider) \n      .then((result) => {\n        const user = result.user;\n        \n        this.setState({\n          user\n        });\n\n        console.log(user.uid);\n        const userRef = this.savedRef.child(user.uid);\n        userRef.on(\"value\", (snapshot) => {\n          console.log(\"the value of favorites/userid changed, so i reset the state\")\n          this.setState({ saved: snapshot.val() })\n        })  \n      });\n  }\n\n  logout() {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar>\n            <Navbar.Brand href={process.env.PUBLIC_URL + '/'}>Restaurant Picker</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n              <Nav className=\"ml-auto\">\n                <Link className=\"underline\" to={process.env.PUBLIC_URL + '/'}>Home</Link>\n                <Link className=\"underline\" to={process.env.PUBLIC_URL + '/form'}>Find Restaurants</Link>\n                <Link className=\"underline\" to={process.env.PUBLIC_URL + '/saved'}>Saved Restaurants</Link>\n              </Nav>\n            </Navbar.Collapse>\n            {this.state.user ?\n              <button onClick={this.logout}>Log Out</button>                \n              :\n              <button onClick={this.login}>Log In</button>              \n            }\n          </Navbar>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + '/form'}>\n              <FormPage onUpdate={this.handleChange}></FormPage>\n            </Route>\n            <Route path={process.env.PUBLIC_URL + '/saved'}>\n              <SavedPage user={this.state.user} res={this.state.saved}></SavedPage>\n            </Route>\n            <Route path={process.env.PUBLIC_URL + '/res'}>\n              <ResPage user={this.state.user} formInfo={this.state} onUpdate={this.updateSaved}></ResPage>\n            </Route>\n            <Route exact path={process.env.PUBLIC_URL + '/'}>\n              <HomePage></HomePage>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/man-thinking.60a12e36.jpeg\";"],"sourceRoot":""}