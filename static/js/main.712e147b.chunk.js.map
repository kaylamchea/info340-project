{"version":3,"sources":["img/man-thinking.jpeg","Footer.js","HomePage.js","CheckBox.js","FormPage.js","ResCard.js","ResPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","id","href","Component","HomePage","aria-labelledby","src","image","alt","role","aria-label","to","process","CheckBox","props","htmlFor","onChange","handleCheckChieldElement","type","checked","isChecked","value","name","FormPage","event","options","state","forEach","option","target","setState","result","filter","res","map","ele","onUpdate","this","placeholder","key","ResCard","url","address","rating","price","ResPage","potential","config","formInfo","headers","params","location","distance","categories","open_now","axios","get","checkParam","then","data","businesses","length","console","log","randomRes","Math","floor","random","push","display_address","join","image_url","App","handleChange","bind","stateChanges","Navbar","Brand","Toggle","aria-controls","Collapse","Nav","Link","path","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.712e147b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/man-thinking.60a12e36.jpeg\";","import React, { Component } from 'react'; //import React Component\n\nexport class Footer extends Component {\n    render() {\n        return(\n            <footer>\n                <div className=\"footer text-center py-3\">\n                <p id=\"contact\">\n                    Contact Information: <a href=\"mailto:kayla900@uw.edu\">kayla900@uw.edu</a> or <a\n                    href=\"mailto:divij@uw.edu\">divij@uw.edu</a>\n                </p>\n\n                <p>\n                    @2020 Copyright: Kayla C. and Divij S.\n                </p>\n                </div>\n          </footer>\n         );\n    }\n}","import React, { Component } from 'react'; //import React Component\nimport image from './img/man-thinking.jpeg';\nimport { Footer } from './Footer';\nimport { Link } from \"react-router-dom\";\n\nexport class HomePage extends Component {\n  render() {\n    return(\n      <>\n        <hr></hr>\n\n        <header>\n          <h1>About Restaurant Picker</h1>\n        </header>\n\n        <main>\n        <div className=\"project-desc\">\n          <div>\n           <div id=\"mission\">\n              <p>Our mission is to help people save precious time spent on deciding</p>\n              <p>where to eat. With our application, users can generate a random</p>\n              <p>open restaurant that matches their preferences.</p>\n            </div>\n\n            <p id=\"features-label\"><strong>Features:</strong></p>\n           <ul aria-labelledby=\"features-label\">\n              <li>Find nearby restaurants based on your location</li>\n              <li>Filter restaurants by food categories, price, and distance</li>\n              <li>View relevant information about the selected restaurant</li>\n            </ul>\n          </div>\n\n          <img src={image} alt=\"Man sitting down and staring at his laptop\"/>\n        </div>\n\n        <div className=\"text-center\">\n          <Link role=\"button\" aria-label=\"Go to form\" className=\"btn btn-dark start-btn\" to={process.env.PUBLIC_URL + '/form'}>Lets get\n            started!</Link>\n        </div>\n      </main>\n\n      <Footer></Footer>\n    </>\n    );\n  }\n}","import React from 'react'\n\nexport const CheckBox = props => {\n    return (\n      <div className=\"form-check\">\n        <label className=\"form-check-label\" htmlFor={props.id}>\n        <input className=\"form-check-input\" onChange={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> \n        {props.name}\n        </label>\n      </div>\n    )\n}\n\nexport default CheckBox","import React, { Component } from 'react'; //import React Component\nimport { Footer } from './Footer';\nimport CheckBox from './CheckBox';\nimport { Link } from \"react-router-dom\";\n\nexport class FormPage extends Component {    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: [\n              {id: 1, value: \"asianfusion\", name: \"Asian\", isChecked: false},\n              {id: 2, value: \"bbq\", name: \"BBQ\", isChecked: false},\n              {id: 3, value: \"chinese\", name: \"Chinese\", isChecked: false},\n              {id: 4, value: \"hotdogs\", name: \"Fastfood\", isChecked: false}\n            ],\n          }\n        }\n\n    handleCheckChieldElement = (event) => {\n        let options = this.state.options\n        options.forEach(option => {\n           if (option.value === event.target.value)\n              option.isChecked =  event.target.checked\n        })\n\n        this.setState({options: options }, () => {\n            let result = options.filter(res=>res.isChecked).map(ele=>ele.value);\n            this.props.onUpdate('categories', result);\n        });  \n      }\n\n    render() {\n        let onUpdate = this.props.onUpdate;\n\n        return (\n          <>\n          <hr></hr>\n\n            <header>\n            <h1>Find a restaurant</h1>\n            </header>\n\n            <main>\n            <form aria-label=\"Submit restaurant preferences\">\n                <div className=\"form-content\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Location:</label>\n                        <input type=\"text\" name=\"location\" className=\"form-control\" id=\"location\"\n                            placeholder=\"Enter address, city, or zip code\" onChange={(event) => onUpdate(event.target.name,  event.target.value)} \n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"distance\">Price:</label>\n                            <select className=\"form-control\" id=\"price\" name=\"price\" onChange={(event) => onUpdate(event.target.name,  event.target.value)}>\n                                <option value=\"1\">$</option>\n                                <option value=\"2\">$$</option>\n                                <option value=\"3\">$$$</option>\n                                <option value=\"4\">$$$$</option>\n                            </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                    <label htmlFor=\"distance\">Max distance (select one):</label>\n                        <select className=\"form-control\" id=\"distance\" name=\"distance\" onChange={(event) => onUpdate(event.target.name,  event.target.value)}>\n                        <option value=\"1609\">&lt; 1 mile</option>\n                        <option value=\"8047\">&lt; 5 miles</option>\n                        <option value=\"16093\">&lt; 10 miles</option>\n                        <option value=\"24140\">&lt; 15 miles</option>\n                        <option value=\"32187\">&lt; 20 miles</option>\n                    </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <p id=\"checkbox-label\">What are you in the mood for?</p>\n                            {\n                                this.state.options.map((option) => {\n                                    return (<CheckBox key={option.id} handleCheckChieldElement={this.handleCheckChieldElement}  {...option} />)\n                                })\n                            }\n                    </div>\n                \n\n                <Link role=\"button\" aria-label=\"Go to restaurant\" className=\"btn btn-dark start-btn\" to={process.env.PUBLIC_URL + '/res'}>Go!</Link>       \n                </div>     \n            </form>\n            </main>\n           \n            <Footer></Footer>\n          </>\n        );\n      }\n}","import React, { Component } from 'react'; //import React Component\n\nexport class ResCard extends Component {   \n    render() {\n        return(\n            <div className=\"restaurant-card\">\n            <img id=\"image\" src={this.props.image} alt=\"Restaurant of interest\"/>\n           \n                <div className=\"restaurant-info\">\n                    <p>\n                    <strong>Restaurant Name: </strong>\n                    <a href={this.props.url} target=\"_blank\">{this.props.name}</a>\n                    </p>\n            \n                    <p>\n                    <strong>Location: </strong>\n                    {this.props.address}\n                    </p>\n            \n                    <p>\n                    <strong>Rating: </strong>\n                    {this.props.rating}\n                    </p>\n            \n                    <p>\n                    <strong>Price: </strong>\n                    {this.props.price}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'; //import React Component\nimport { ResCard } from './ResCard'\nimport axios from 'axios';\nimport { Footer } from './Footer';\n  \nexport class ResPage extends Component { \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            potential: []\n        };\n\n    }\n\n    checkParam() {\n        let config = '';\n        if(this.props.formInfo) {\n            config  = {\n                headers: {'Authorization': 'Bearer GCdrOGFk2ro5ZOxbZWFGg-c8ECXqeeUp0rByZzImIIGDGBRzo_F7hgjeHk5RRO6TIH6BSSVW7eTEr8p0F3zT8u7nTyuBXgEVcOp4_SKkCHmCvrj4g-ZcD30KkVdhXnYx'},\n                params: {\n                  location: this.props.formInfo.location,\n                  distance: this.props.formInfo.distance,\n                  price: this.props.formInfo.price,\n                  categories: this.props.formInfo.categories,\n                  open_now: true\n                }\n            };\n        }\n\n        return(config);\n    }    \n\n    componentDidMount() {\n        axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?', this.checkParam())\n        .then(res => { \n            this.setState({potential: res.data.businesses});\n        })\n    }\n\n    render() {\n        let res = [];\n        if(this.state.potential.length > 0) {\n            console.log(this.state.potential);\n            let randomRes = (this.state.potential)[Math.floor(Math.random() * (this.state.potential).length)];\n            console.log(randomRes);\n            res.push (\n                <ResCard name={randomRes.name} address={randomRes.location.display_address.join(' ')} price={randomRes.price} rating={randomRes.rating} image={randomRes.image_url} url={randomRes.url}></ResCard>\n            );\n        }\n\n        return (\n            <>\n            <header>\n                <h1>Find a Restaurant</h1>\n            </header>\n            {res}\n            <Footer></Footer>\n            </>\n        )\n      }  \n}","import React, { Component } from 'react'; //import React Component\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\nimport { HomePage } from './HomePage';\nimport { FormPage } from './FormPage';\nimport { ResPage } from './ResPage';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      location: '',\n      distance: '1609',\n      price: '1',\n      categories: '',\n    };\n  }\n\n  handleChange(key, value) {\n      let stateChanges = {\n          [key]: value\n      };\n\n      this.setState(stateChanges);\n  }\n\n  render() {\n    return (\n<Router>\n      <div>\n      <Navbar>\n        <Navbar.Brand href={process.env.PUBLIC_URL + '/'}>Restaurant Picker</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ml-auto\">\n            <Nav.Link className=\"underline\" href={process.env.PUBLIC_URL + '/'}>Home</Nav.Link>\n            <Nav.Link className=\"underline\" href={process.env.PUBLIC_URL + '/form'}>Find Restaurants</Nav.Link>\n            <Nav.Link className=\"underline\" href={process.env.PUBLIC_URL + '/saved'}>Saved Restaurants</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/form'}>\n            <FormPage onUpdate={this.handleChange}></FormPage>\n          </Route>\n          <Route path={process.env.PUBLIC_URL + '/saved'}>\n          <div>Saved</div>\n          </Route>\n          <Route path={process.env.PUBLIC_URL + '/res'}>\n            <ResPage formInfo={this.state}></ResPage>\n          </Route>\n          <Route exact path={process.env.PUBLIC_URL + '/'}>\n            <HomePage></HomePage>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}